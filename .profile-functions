# Bash functions for use in .profile and beyond
# Source this file in your .profile or .bashrc to use these functions


# Usage: prependPath <path>
# Adds <path> to the PATH environment variable if it exists
prependPath() {
while [ $# -gt 0 ]; do
    if [ -d "$1" ]; then
	PATH="$1:$PATH"
    fi
    shift
done
}

# Usage: appendPath <path>
# Adds <path> to the PATH environment variable if it exists
appendPath() {
while [ $# -gt 0 ]; do
    if [ -d "$1" ]; then
	PATH="$PATH:$1"
    fi
    shift
done
}

# Usage: cleansePath
# Removes duplicate entries from the PATH environment variable.
# Returns 0 if the PATH was changed, 1 if it was not.
cleansePath() {
    local newPath=""
    for dir in $(echo $PATH | tr ":" "\n"); do
	dir="$(realpath "$dir")"
	if ( [ -d "$dir" ] && [[ ":$newPath:" != *":$dir:"* ]] ); then
	    newPath="${newPath:+"$newPath:"}$dir"
	fi
    done
    if [ "$newPath" != "$PATH" ]; then
	PATH="$newPath"
	return 0
    else
	return 1
    fi
}

# convert html strings to plain text
function urldecode() { : "${*//+/ }"; echo -e "${_//%/\\x}"; }

# returns expanded directories (i.e. with symlinks and tilde resolved)
realpath() {
    local _safe_path; printf -v _safe_path "%q" "$1"
    eval "ln -sf ${_safe_path#\\} /tmp/realpath.$$"
    readlink /tmp/realpath.$$
    rm -f /tmp/realpath.$$
}

# Usage: proxy <proxy>
# Sets the http_proxy, https_proxy, and ftp_proxy environment variables
proxy() {
    local proxy="$1"
    for setting in http_proxy https_proxy ftp_proxy ; do
	export $setting="$proxy"
	[ ${BASH_VERSINFO[0]} -ge 4 ] &&
	    export ${setting^^}="$proxy" # Same as above, but for uppercase
    done
}
